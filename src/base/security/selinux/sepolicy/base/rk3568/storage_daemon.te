# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow storage_daemon data_file:dir { search };
allow storage_daemon data_service_el2_file:dir { read open search };
allow storage_daemon data_service_file:dir { search };
allow storage_daemon debugfs:dir { search };
allow storage_daemon dev_at_file:chr_file { ioctl open read write };
allow storage_daemon dev_binder_file:chr_file { ioctl map open read write };
allow storage_daemon dev_file:dir { search };
allow storage_daemon dev_null_file:chr_file { read write };
allow storage_daemon dev_parameters_file:dir { search };
allow storage_daemon dev_parameters_file:file { map open read };
allow storage_daemon dev_random_file:chr_file { open read };
allow storage_daemon dev_unix_file:dir { search };
allow storage_daemon dev_unix_socket_file:dir { search };
allow storage_daemon dev_unix_socket_file:sock_file { write };
allow storage_daemon etc_file:lnk_file { read };
allow storage_daemon hmdfs:dir { read open search };
allow storage_daemon hmdfs:filesystem { mount };
allow storage_daemon init:fd { use };
allow storage_daemon init:netlink_kobject_uevent_socket { read write };
allow storage_daemon init:unix_dgram_socket { sendto };
allow storage_daemon init:unix_stream_socket { read write };
allow storage_daemon kernel:fd { use };
allow storage_daemon rootfs:dir { search };
allow storage_daemon samgr:binder { call transfer };
allow storage_daemon storage_daemon:capability { chown dac_override net_admin sys_admin };
allow storage_daemon storage_daemon_exec:file { entrypoint execute map read };
allow storage_daemon storage_daemon:netlink_kobject_uevent_socket { bind create read setopt };
allow storage_daemon storage_daemon:process { fork };
allow storage_daemon storage_daemon:unix_dgram_socket { connect create write };
allow storage_daemon sys_file:dir { open read search };
allow storage_daemon sys_file:file { open write };
allow storage_daemon sys_file:lnk_file { read };
allow storage_daemon sysfs_block_file:dir { open read search };
allow storage_daemon system_etc_file:dir { search };
allow storage_daemon system_etc_file:file { open read };
allow storage_daemon system_file:dir { search };
allow storage_daemon system_lib_file:dir { search };
allow storage_daemon system_lib_file:file { execute getattr map open read };
allow storage_daemon tmpfs:dir { add_name create mounton search setattr write };
allowxperm storage_daemon dev_at_file:chr_file ioctl { 0x4101 };
allowxperm storage_daemon dev_binder_file:chr_file ioctl { 0x6201 0x6205 0x6209 0x621e 0x621f };

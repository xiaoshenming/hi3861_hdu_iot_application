# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow distributedsched data_file:dir { search };
allow distributedsched data_init_agent:dir { search };
allow distributedsched debugfs:dir { search };
allow distributedsched dev_at_file:chr_file { ioctl open read write };
allow distributedsched dev_binder_file:chr_file { ioctl map open read write };
allow distributedsched dev_file:dir { search };
allow distributedsched dev_null_file:chr_file { read write };
allow distributedsched dev_parameters_file:dir { search };
allow distributedsched dev_parameters_file:file { map open read };
allow distributedsched dev_random_file:chr_file { open read };
allow distributedsched dev_unix_file:dir { search };
allow distributedsched dev_unix_socket_file:dir { search };
allow distributedsched dev_unix_socket_file:sock_file { write };
allow distributedsched distributeddata:binder { call transfer };
allow distributedsched distributedsched:dir { search };
allow distributedsched distributedsched:lnk_file { read };
allow distributedsched distributedsched:lockdown { confidentiality };
allow distributedsched distributedsched:process { fork getsched };
allow distributedsched distributedsched:unix_dgram_socket { connect create write };
allow distributedsched etc_file:lnk_file { read };
allow distributedsched huks_service:binder { call };
allow distributedsched init:fd { use };
allow distributedsched init:netlink_kobject_uevent_socket { read write };
allow distributedsched init:unix_dgram_socket { sendto };
allow distributedsched init:unix_stream_socket { read write };
allow distributedsched kernel:fd { use };
allow distributedsched param_watcher:binder { call transfer };
allow distributedsched proc_file:dir { search };
allow distributedsched proc_file:lnk_file { read };
allow distributedsched rootfs:dir { search };
allow distributedsched samain_exec:file { entrypoint execute map read };
allow distributedsched samgr:binder { call transfer };
allow distributedsched softbus_server:binder { call transfer };
allow distributedsched sys_file:dir { search };
allow distributedsched sys_file:file { open read };
allow distributedsched sys_file:lnk_file { read };
allow distributedsched sysfs_block_file:dir { search };
allow distributedsched system_etc_file:dir { getattr open read search };
allow distributedsched system_etc_file:file { open read };
allow distributedsched system_file:dir { search };
allow distributedsched system_lib_file:dir { search };
allow distributedsched system_lib_file:file { execute getattr map open read };
allow distributedsched system_profile_file:dir { search };
allow distributedsched system_profile_file:file { getattr open read };
allow distributedsched system_usr_file:dir { search };
allow distributedsched system_usr_file:file { getattr map open read };
allow distributedsched tracefs:dir { search };
allow distributedsched tracefs:file { open write };
allow distributedsched vendor_file:dir { search };
allow distributedsched vendor_file:file { execute getattr map open read };
allow distributedsched vendor_file:lnk_file { read };
allowxperm distributedsched dev_at_file:chr_file ioctl { 0x4101 };
allowxperm distributedsched dev_binder_file:chr_file ioctl { 0x6201 0x6205 0x6208 0x6209 0x621e 0x621f };

# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow faultloggerd accountmgr:process { signal };
allow faultloggerd data_file:dir { search };
allow faultloggerd data_log:dir { add_name open read remove_name search setattr write };
allow faultloggerd data_log:file { create read write open setattr unlink };
allow faultloggerd dev_file:dir { search };
allow faultloggerd dev_null_file:chr_file { read write };
allow faultloggerd dev_parameters_file:dir { search };
allow faultloggerd dev_parameters_file:file { map open read };
allow faultloggerd dev_unix_file:dir { search };
allow faultloggerd dev_unix_socket_file:dir { add_name search write };
allow faultloggerd dev_unix_socket_file:sock_file { create setattr write };
allow faultloggerd etc_file:lnk_file { read };
allow faultloggerd faultloggerd:capability { fowner kill };
allow faultloggerd faultloggerd_exec:file { entrypoint execute map read };
allow faultloggerd faultloggerd:process { fork };
allow faultloggerd faultloggerd:unix_dgram_socket { connect create write };
allow faultloggerd faultloggerd:unix_stream_socket { accept bind create listen read setopt write };
allow faultloggerd foundation:process { signal };
allow faultloggerd init:fd { use };
allow faultloggerd init:netlink_kobject_uevent_socket { read write };
allow faultloggerd init:unix_dgram_socket { sendto };
allow faultloggerd init:unix_stream_socket { read write };
allow faultloggerd kernel:fd { use };
allow faultloggerd normal_hap:process { signal };
allow faultloggerd system_basic_hap:process { signal };
allow faultloggerd rootfs:dir { search };
allow faultloggerd system_etc_file:dir { search };
allow faultloggerd system_etc_file:file { open read };
allow faultloggerd system_file:dir { search };
allow faultloggerd system_lib_file:dir { search };
allow faultloggerd system_lib_file:file { execute getattr map open read };

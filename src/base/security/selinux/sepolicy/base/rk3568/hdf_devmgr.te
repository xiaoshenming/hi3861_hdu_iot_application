# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow hdf_devmgr audio_hdi_server_host:binder { call transfer };
allow hdf_devmgr audio_policy:binder { call };
allow hdf_devmgr blue_host:binder { call transfer };
allow hdf_devmgr camera_host:binder { call transfer };
allow hdf_devmgr camera_service:binder { call transfer };
allow hdf_devmgr data_file:dir { search };
allow hdf_devmgr data_init_agent:dir { search };
allow hdf_devmgr data_init_agent:file { ioctl open read append };
allow hdf_devmgr debugfs:dir { search };
allow hdf_devmgr dev_at_file:chr_file { ioctl open read write };
allow hdf_devmgr dev_binder_file:chr_file { ioctl map open read write };
allow hdf_devmgr dev_file:dir { search };
allow hdf_devmgr dev_mgr_file:chr_file { getattr ioctl open read write };
allow hdf_devmgr dev_null_file:chr_file { read write };
allow hdf_devmgr dev_parameters_file:dir { search };
allow hdf_devmgr dev_parameters_file:file { map open read };
allow hdf_devmgr dev_unix_file:dir { search };
allow hdf_devmgr dev_unix_socket_file:dir { search };
allow hdf_devmgr dev_unix_socket_file:sock_file { write };
allow hdf_devmgr display_gralloc_host:binder { call transfer };
allow hdf_devmgr etc_file:lnk_file { read };
allow hdf_devmgr foundation:binder { transfer };
allow hdf_devmgr hdf_devmgr:dir { search };
allow hdf_devmgr hdf_devmgr:lnk_file { read };
allow hdf_devmgr hdf_devmgr:process { fork };
allow hdf_devmgr hdf_devmgr:unix_dgram_socket { connect create write };
allow hdf_devmgr hdf_devmgr:unix_stream_socket { connect create read setopt write };
allow hdf_devmgr init:fd { use };
allow hdf_devmgr init:netlink_kobject_uevent_socket { read write };
allow hdf_devmgr init:unix_dgram_socket { sendto };
allow hdf_devmgr init:unix_stream_socket { read write };
allow hdf_devmgr input_user_host:binder { call transfer };
allow hdf_devmgr kernel:fd { use };
allow hdf_devmgr kernel:unix_stream_socket { connectto };
allow hdf_devmgr light_dal_host:binder { call transfer };
allow hdf_devmgr normal_hap:binder { transfer };
allow hdf_devmgr system_core_hap:binder { transfer };
allow hdf_devmgr power_host:binder { call transfer };
allow hdf_devmgr system_basic_hap:binder { transfer };
allow hdf_devmgr proc_file:dir { search };
allow hdf_devmgr proc_file:lnk_file { read };
allow hdf_devmgr pulseaudio:binder { transfer };
allow hdf_devmgr render_service:binder { transfer };
allow hdf_devmgr rootfs:dir { search };
allow hdf_devmgr samgr:binder { call transfer };
allow hdf_devmgr sensor_dal_host:binder { call transfer };
allow hdf_devmgr sensors:binder { transfer };
allow hdf_devmgr system_etc_file:dir { search };
allow hdf_devmgr system_etc_file:file { open read };
allow hdf_devmgr system_file:dir { search };
allow hdf_devmgr system_lib_file:dir { search };
allow hdf_devmgr system_lib_file:file { execute getattr map open read };
allow hdf_devmgr thermal_sa:binder { transfer };
allow hdf_devmgr usbfnMaster_host:binder { call transfer };
allow hdf_devmgr usb_host:binder { call transfer };
allow hdf_devmgr usb_service:binder { transfer };
allow hdf_devmgr vendor_etc_file:dir { search };
allow hdf_devmgr vendor_etc_file:file { getattr open read };
allow hdf_devmgr vendor_file:dir { search };
allow hdf_devmgr vendor_file:file { entrypoint execute getattr map open read };
allow hdf_devmgr vibrator_dal_host:binder { call transfer };
allow hdf_devmgr wifi_host:binder { call transfer };
allowxperm hdf_devmgr data_init_agent:file ioctl { 0x5413 };
allowxperm hdf_devmgr dev_at_file:chr_file ioctl { 0x4101 };
allowxperm hdf_devmgr dev_binder_file:chr_file ioctl { 0x6201 0x6205 0x6209 0x621e 0x621f };
allowxperm hdf_devmgr dev_mgr_file:chr_file ioctl { 0x6201 };

# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow foundation accessibility:binder { call };
allow foundation accesstoken_service:binder { call };
allow foundation accountmgr:binder { call transfer };
allow foundation appspawn:unix_stream_socket { connectto };
allow foundation battery_stats:binder { call };
allow foundation bgtaskmgr_service:binder { call transfer };
allow foundation config_file:dir { add_name create getattr search write };
allow foundation config_file:file { open write };
allow foundation data_file:dir { search };
allow foundation data_file:file { getattr };
allow foundation data_init_agent:dir { search };
allow foundation data_log:file { read write };
allow foundation data_service_el1_file:dir { add_name open read remove_name search write };
allow foundation data_service_el1_file:file { create getattr ioctl open read unlink write write open };
allow foundation data_service_file:dir { search };
allow foundation data_system_ce:dir { add_name search write };
allow foundation data_system_ce:file { create getattr ioctl lock map open read write };
allow foundation data_system:dir { add_name open read remove_name search write };
allow foundation data_system:file { create getattr ioctl lock open read write read write open unlink };
allow foundation debugfs:dir { search };
allow foundation dev_ashmem_file:chr_file { getattr ioctl map open read write };
allow foundation dev_at_file:chr_file { ioctl open read write };
allow foundation dev_binder_file:chr_file { ioctl map open read write };
allow foundation dev_file:dir { search };
allow foundation deviceauth_service:binder { call transfer };
allow foundation device_usage_statistics_service:binder { call transfer };
allow foundation dev_null_file:chr_file { open read write };
allow foundation dev_parameters_file:dir { search };
allow foundation dev_parameters_file:file { map open read };
allow foundation dev_random_file:chr_file { open read };
allow foundation dev_unix_file:dir { search };
allow foundation dev_unix_socket_file:dir { search };
allow foundation dev_unix_socket_file:sock_file { write };
allow foundation distributeddata:binder { call transfer };
allow foundation distributedfile:binder { call };
allow foundation distributedhardware_fwk:binder { call };
allow foundation etc_file:lnk_file { read };
allow foundation faultloggerd:fd { use };
allow foundation faultloggerd:unix_stream_socket { connectto };
allow foundation fms_service:binder { call };
allow foundation foundation:dir { getattr open read search };
allow foundation foundation:fifo_file { read write };
allow foundation foundation:file { getattr open read };
allow foundation foundation:lnk_file { read };
allow foundation foundation:lockdown { confidentiality };
allow foundation foundation:process { fork getcap getsched ptrace setcap setsched };
allow foundation foundation:unix_dgram_socket { connect create getopt setopt write };
allow foundation foundation:unix_stream_socket { connect create read setopt write };
allow foundation hdf_devmgr:binder { call };
allow foundation huks_service:binder { call };
allow foundation init:binder { call };
allow foundation init:fd { use };
allow foundation init:netlink_kobject_uevent_socket { read write };
allow foundation init:unix_dgram_socket { sendto };
allow foundation init:unix_stream_socket { read write };
allow foundation inputmethod_service:binder { call };
allow foundation kernel:fd { use };
allow foundation kernel:unix_stream_socket { connectto };
allow foundation lib_file:lnk_file { read };
allow foundation memmgrservice:binder { call transfer };
allow foundation multimodalinput:binder { call };
allow foundation multimodalinput:fd { use };
allow foundation multimodalinput:unix_stream_socket { read write write };
allow foundation normal_hap:binder { call transfer };
allow foundation param_watcher:binder { call transfer };
allow foundation system_core_hap:binder { call transfer };
allow foundation power_host:binder { call transfer };
allow foundation system_basic_hap:binder { call transfer };
allow foundation proc_file:dir { search };
allow foundation proc_file:file { open read };
allow foundation proc_file:lnk_file { read };
allow foundation render_service:binder { call transfer };
allow foundation render_service:fd { use };
allow foundation resource_schedule_service:binder { call transfer };
allow foundation rootfs:dir { getattr search };
allow foundation samain_exec:file { entrypoint execute getattr map open read };
allow foundation samgr:binder { call transfer };
allow foundation sensors:binder { call };
allow foundation softbus_server:binder { call transfer };
allow foundation storage_manager:binder { call };
allow foundation sys_file:dir { open read search };
allow foundation sys_file:file { ioctl open read write };
allow foundation sys_file:lnk_file { read };
allow foundation system_bin_file:dir { search };
allow foundation system_bin_file:file { execute execute_no_trans map read open };
allow foundation system_etc_file:dir { getattr open read search };
allow foundation system_etc_file:file { getattr open read };
allow foundation system_file:dir { open read search };
allow foundation system_file:file { getattr open read };
allow foundation system_lib_file:dir { search };
allow foundation system_lib_file:file { execute getattr map read open };
allow foundation system_profile_file:dir { search };
allow foundation system_profile_file:file { getattr open read };
allow foundation system_usr_file:dir { search };
allow foundation system_usr_file:file { getattr map open read };
allow foundation telephony_sa:binder { call transfer };
allow foundation thermal_sa:binder { call };
allow foundation time_service:binder { call };
allow foundation token_sync_service:binder { call };
allow foundation tracefs:dir { search };
allow foundation tracefs:file { open write };
allow foundation upms:binder { call };
allow foundation vendor_etc_file:dir { search };
allow foundation vendor_file:dir { search };
allow foundation vendor_file:file { execute getattr map open read };
allow foundation vendor_file:lnk_file { read };
allow foundation work_scheduler_service:binder { call };
allowxperm foundation data_service_el1_file:file ioctl { 0x5413 };
allowxperm foundation data_system_ce:file ioctl { 0xf50c };
allowxperm foundation data_system:file ioctl { 0xf50c };
allowxperm foundation dev_ashmem_file:chr_file ioctl { 0x7701 0x7703 0x7705 0x7706 };
allowxperm foundation dev_at_file:chr_file ioctl { 0x4101 };
allowxperm foundation dev_binder_file:chr_file ioctl { 0x6201 0x6205 0x6208 0x6209 0x621e 0x621f };
allowxperm foundation sys_file:file ioctl { 0x5413 };

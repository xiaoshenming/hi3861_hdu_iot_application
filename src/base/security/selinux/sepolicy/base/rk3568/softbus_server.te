# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

allow softbus_server data_data_file:dir { search };
allow softbus_server data_data_file:file { open read };
allow softbus_server data_file:dir { search };
allow softbus_server debugfs:dir { search };
allow softbus_server dev_at_file:chr_file { ioctl open read write };
allow softbus_server dev_binder_file:chr_file { ioctl map open read write };
allow softbus_server dev_file:dir { search };
allow softbus_server deviceauth_service:binder { call transfer };
allow softbus_server dev_null_file:chr_file { ioctl read write };
allow softbus_server dev_parameters_file:dir { search };
allow softbus_server dev_parameters_file:file { map open read };
allow softbus_server dev_random_file:chr_file { open read };
allow softbus_server dev_unix_file:dir { search };
allow softbus_server dev_unix_socket_file:dir { search };
allow softbus_server dev_unix_socket_file:sock_file { write };
allow softbus_server distributeddata:binder { call };
allow softbus_server distributedfile:binder { call };
allow softbus_server distributedsched:binder { call };
allow softbus_server dslm_service:binder { call };
allow softbus_server etc_file:lnk_file { read };
allow softbus_server foundation:binder { call };
allow softbus_server huks_service:binder { call };
allow softbus_server init:fd { use };
allow softbus_server init:netlink_kobject_uevent_socket { read write };
allow softbus_server init:unix_dgram_socket { sendto };
allow softbus_server init:unix_stream_socket { read write };
allow softbus_server kernel:fd { use };
allow softbus_server proc_file:dir { search };
allow softbus_server proc_file:lnk_file { read };
allow softbus_server rootfs:dir { search };
allow softbus_server samain_exec:file { entrypoint execute map read };
allow softbus_server samgr:binder { call transfer };
allow softbus_server softbus_server:capability { net_admin };
allow softbus_server softbus_server:dir { search };
allow softbus_server softbus_server:fifo_file { read write };
allow softbus_server softbus_server:lnk_file { read };
allow softbus_server softbus_server:netlink_route_socket { bind create read setopt };
allow softbus_server softbus_server:process { fork getsched };
allow softbus_server softbus_server:udp_socket { create ioctl };
allow softbus_server softbus_server:unix_dgram_socket { connect create write };
allow softbus_server sys_file:dir { search };
allow softbus_server sys_file:file { open read };
allow softbus_server sys_file:lnk_file { read };
allow softbus_server sysfs_block_file:dir { search };
allow softbus_server system_etc_file:dir { search };
allow softbus_server system_etc_file:file { open read };
allow softbus_server system_file:dir { search };
allow softbus_server system_lib_file:dir { search };
allow softbus_server system_lib_file:file { execute getattr map open read };
allow softbus_server system_profile_file:dir { search };
allow softbus_server system_profile_file:file { getattr open read };
allow softbus_server token_sync_service:binder { call };
allow softbus_server wifi_manager_service:binder { call };
allowxperm softbus_server dev_at_file:chr_file ioctl { 0x4101 };
allowxperm softbus_server dev_binder_file:chr_file ioctl { 0x6201 0x6205 0x6208 0x6209 0x621e 0x621f };
allowxperm softbus_server dev_null_file:chr_file ioctl { 0x5413 };
allowxperm softbus_server softbus_server:udp_socket ioctl { 0x8913 0x8915 };
